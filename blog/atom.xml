<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://easonoob.github.io/blog</id>
    <title>My Site Blog</title>
    <updated>2024-02-09T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://easonoob.github.io/blog"/>
    <subtitle>My Site Blog</subtitle>
    <icon>https://easonoob.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Introduction to Quantum Neural Networks]]></title>
        <id>https://easonoob.github.io/blog/intro-to-qnn</id>
        <link href="https://easonoob.github.io/blog/intro-to-qnn"/>
        <updated>2024-02-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Make a Quantum Neural Network (QNN) in PyTorch.]]></summary>
        <content type="html"><![CDATA[<p>Make a Quantum Neural Network (QNN) in PyTorch.</p>
<p>In the <a href="https://easonoob.github.io/blog/intro-to-quantum-computing" target="_blank" rel="noopener noreferrer">last blog post</a>, we talked about the very basics of quantum computing, and tried a few examples with qiskit. In this post, we will try to build a QNN completely with PyTorch only, without quantum simulation / machine learning libraries like PennyLane or TorchQuantum, so we can know what really happens inside the simulation. Let's get started!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://easonoob.github.io/blog/intro-to-qnn#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2>
<ul>
<li>Read and Understand the last post</li>
<li>Basic Python &amp; PyTorch</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="simulation">Simulation<a href="https://easonoob.github.io/blog/intro-to-qnn#simulation" class="hash-link" aria-label="Direct link to Simulation" title="Direct link to Simulation">​</a></h2>
<p>Import necessary libraries:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">nn </span><span class="token keyword" style="color:rgb(12, 150, 155)">as</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">functional </span><span class="token keyword" style="color:rgb(12, 150, 155)">as</span><span class="token plain"> F</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> typing </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> Union</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> List</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> numpy </span><span class="token keyword" style="color:rgb(12, 150, 155)">as</span><span class="token plain"> np</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> torchvision </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> datasets</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> transforms</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">utils</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> DataLoader</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> matplotlib</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">pyplot </span><span class="token keyword" style="color:rgb(12, 150, 155)">as</span><span class="token plain"> plt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We know a quantum state vector of a single qubit can be represented as <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ψ</mi><mo stretchy="false">⟩</mo><mo>=</mo><mi>α</mi><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>β</mi><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|\psi\rangle = \alpha |0\rangle + \beta |1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.0037em">α</span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.05278em">β</span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span>, and numerous qubits can be combined into a large state of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> propabilities. For the simulation, we will create a single large state vector <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal">h</span></span></span></span> which stores all qubits in the system (not very efficient but this is the easiest) with <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>b</mi><mo>×</mo><munder><munder><mrow><mn>2</mn><mo>×</mo><mn>2</mn><mo>×</mo><mo>⋯</mo><mo>×</mo><mn>2</mn></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>n</mi><mtext>&nbsp;times</mtext></mrow></munder></mrow></msup></mrow><annotation encoding="application/x-tex">h \in \mathbb{R}^{b \times \underbrace{2 \times 2 \times \cdots \times 2}_{n \text{ times}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1.5797em"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.5797em"><span style="top:-4.0936em;margin-right:0.05em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mbin mtight">×</span><span class="mord munder mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6444em"><span style="top:-1.5916em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord text mtight"><span class="mord mtight">&nbsp;times</span></span></span></span></span><span style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord munder mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6444em"><span class="svg-align" style="top:-2.2687em"><span class="pstrut" style="height:3em"></span><span class="stretchy mtight" style="height:0.548em;min-width:1.6em"><span class="brace-left mtight" style="height:0.548em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"></path></svg></span><span class="brace-center mtight" style="height:0.548em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMidYMin slice"><path d="M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"></path></svg></span><span class="brace-right mtight" style="height:0.548em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewBox="0 0 400000 548" preserveAspectRatio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"></path></svg></span></span></span><span style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7313em"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4084em"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> which <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal">b</span></span></span></span> is batch size, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal">n</span></span></span></span> is number of qubits so that for each batch, there are <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> propabilities.</p>
<p>To apply the gate to a specific qubit in the state vector, we can simply permute the target qubit dimension to the back, then multiply it with the gate matrix. For double qubits gates, we can permute the control and target to the back, combine the two dimensions, multiply the gate matrix, and reshape back. Here is a function that applied the gate to the state:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">apply_gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> mat</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> wires</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> Union</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token builtin" style="color:rgb(72, 118, 214)">int</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> List</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token builtin" style="color:rgb(72, 118, 214)">int</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">"""</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    Apply the gate matrix/matrices to the state vector using torch.bmm method.</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    Args:</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">        state (torch.Tensor): The state vector.</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">        mat (torch.Tensor): The gate matrix/matrices.</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">        wires (int or List[int]): Which qubit(s) the operation is applied to.</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">        </span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    Returns:</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">        torch.Tensor: The updated state vector.</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Handle input for single qubit as a list for uniformity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">isinstance</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">wires</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">int</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        wires </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">wires</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Ensure the matrix is on the same device and dtype as the state</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    mat </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> mat</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">dtype</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Calculate the new order of dimensions for the state to match matrix multiplication needs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    num_qubits </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    permute_order </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">list</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token builtin" style="color:rgb(72, 118, 214)">range</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> num_qubits </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Start from 1 to account for batch dimension</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> wire </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">enumerate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">wires</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        permute_order</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">remove</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">wire </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Remove wire from its current place</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        permute_order</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">insert</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> wire </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Insert wire right after the batch dimension</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Permute the state tensor to bring the target wire dimensions next to the batch dimension</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    permuted_state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">permute</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> permute_order</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Batch dimension remains the first</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    reshaped_state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> permuted_state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">reshape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> mat</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply the gate using matrix multiplication</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    new_state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">bmm</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">reshaped_state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> mat</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">mat</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">else</span><span class="token plain"> reshaped_state @ mat</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Reshape and permute back to the original shape and order</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    final_state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> new_state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">view</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">permute</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token builtin" style="color:rgb(72, 118, 214)">list</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">np</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">argsort</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> permute_order</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> final_state</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The reason for the input to accept batched gate matrices is for the angle encoding later, which encodes inputs into the state.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="define-gate-matrices">Define Gate Matrices<a href="https://easonoob.github.io/blog/intro-to-qnn#define-gate-matrices" class="hash-link" aria-label="Direct link to Define Gate Matrices" title="Direct link to Define Gate Matrices">​</a></h3>
<p>Now the gate matrix functions:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">h_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> np</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sqrt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">cnot_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">pauli_x_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">pauli_y_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">pauli_z_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">rx_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">ry_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">rz_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">u3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> phi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> lam</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> lam</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> phi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">phi </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> lam</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">crx_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">cry_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">crz_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">cu3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> phi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> lam</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> lam</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                         </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> phi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">sin</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1j</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">phi </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> lam</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cos</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">theta </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> requires_grad</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now the Gate class, which stores the parameters (if any) and qubits:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(17, 17, 17)">Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> gate_matrix_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> wires</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">list</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> n_params</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">int</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token builtin" style="color:rgb(72, 118, 214)">super</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">wires </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> wires</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">n_params </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> n_params</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">gate_matrix_fn </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> gate_matrix_fn</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">params </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Parameter</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">randn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">n_params</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">float32</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">uniform_</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token plain">np</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">pi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> np</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">pi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Unifrom distribution between -pi and pi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">forward</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        gate_matrix </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">gate_matrix_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">params</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> apply_gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> gate_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">wires</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="angle-encoding">Angle Encoding<a href="https://easonoob.github.io/blog/intro-to-qnn#angle-encoding" class="hash-link" aria-label="Direct link to Angle Encoding" title="Direct link to Angle Encoding">​</a></h3>
<p>Angle encoding, as mentioned above, encodes the input tensor into the state vector using rotation gates (rx, ry, u3, etc).</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(17, 17, 17)">AngleEncoding</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">"""</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    Example functions list:</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    [{"gate": 'rx', "wires": 0, "input_idx": 0},</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    {"gate": 'ry', "wires": 1, "input_idx": 1},</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    {"gate": 'rz', "wires": 2, "input_idx": 2},]</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    or</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    [{"gate": 'u3', "wires": 0, "input_idx": [0, 1, 2]},</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    {"gate": 'rx', "wires": 1, "input_idx": 1},</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    {"gate": 'cu3', "wires": [1, 2], "input_idx": [0, 1, 2]},]</span><br></span><span class="token-line" style="color:#403f53"><span class="token triple-quoted-string string" style="color:rgb(72, 118, 214)">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> func_list</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token builtin" style="color:rgb(72, 118, 214)">super</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">func_list </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> func_list</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">forward</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> info </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">func_list</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            params </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">info</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">else</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">info</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            gate </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> info</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">'_matrix'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            fn </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">globals</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Get the function from the globals</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            mat </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">stack</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain">p</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> p </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> params</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dim</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">else</span><span class="token plain"> fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain">params</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Gate matrix</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> apply_gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                mat</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">mat</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                wires</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">info</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> state</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="measurement">Measurement<a href="https://easonoob.github.io/blog/intro-to-qnn#measurement" class="hash-link" aria-label="Direct link to Measurement" title="Direct link to Measurement">​</a></h3>
<p>For the measurement, we will measure the expected values of all qubits based on a observable matrix of size <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>×</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n \times 2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6644em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>, which typically is either Pauli-X, Pauli-Y, or Pauli-Z. Mathematically it is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>ψ</mi><mi mathvariant="normal">∣</mi><mi>O</mi><mi mathvariant="normal">∣</mi><mi>ψ</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle\psi|O|\psi\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">⟨</span><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em">O</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="mclose">⟩</span></span></span></span>.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">measure_pauli_expectations</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> observable_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    num_qubits </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    batch_size </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    expected_values </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">empty</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">batch_size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> num_qubits</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">real</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">dtype</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> device</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    observable_matrix </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> observable_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">dtype</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Compute the expectation value for each qubit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> qubit </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">range</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">num_qubits</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Permute to bring the qubit of interest to the last position</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        dims </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">list</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token builtin" style="color:rgb(72, 118, 214)">range</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> num_qubits </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        dims</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dims</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">pop</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">qubit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Move the qubit index to the end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        permuted_state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">permute</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> dims</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Reshape to combine all other dimensions except the last two</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        reshaped_state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> permuted_state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">reshape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">batch_size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply observable and calculate expectation value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Here we calculate &lt;psi|O|psi&gt; for the current qubit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        measured_state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">matmul</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">reshaped_state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> observable_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        probabilities </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">matmul</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">measured_state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> reshaped_state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">transpose</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">diagonal</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dim1</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dim2</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        expected_value </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> probabilities</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">sum</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dim</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Sum over the states to get the expectation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Store the computed expected value for the current qubit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        expected_values</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> qubit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> expected_value</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">real</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> expected_values</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="model">Model<a href="https://easonoob.github.io/blog/intro-to-qnn#model" class="hash-link" aria-label="Direct link to Model" title="Direct link to Model">​</a></h3>
<p>We will use the MNIST dataset for the testing. We will only use the first 5 numbers (0, 1, 2, 3, 4) and the image size will be reduced to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">5 \times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">5</span></span></span></span> to reduce complexity. The Variational Quantum Circuit (VQC) consists 4 blocks of single and double qubits parameterized gates.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(17, 17, 17)">VQC</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token builtin" style="color:rgb(72, 118, 214)">super</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">VQC</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">n_wires </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Number of qubits in the circuit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">encoding </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> AngleEncoding</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">6</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">7</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">8</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">9</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">10</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">11</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">12</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">13</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">14</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">15</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">16</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">17</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">18</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">19</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"ry"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">20</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">21</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">22</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">23</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string" style="color:rgb(72, 118, 214)">"input_idx"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">24</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"gate"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"rz"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"wires"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Encode 16 features into 4 qubits</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        layers </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">range</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            layers</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">extend</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cnot_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cnot_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cnot_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cnot_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cnot_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">rx_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">rx_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">rx_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">rx_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">rx_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cu3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cu3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cu3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cu3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">cu3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">u3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">u3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">u3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">u3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                Gate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">u3_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">qnn </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Sequential</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain">layers</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">forward</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">zeros</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token operator" style="color:rgb(12, 150, 155)">**</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">n_wires</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">complex64</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> device</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">reshape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Initialize the state to |0001&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">encoding</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">view</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Encode the input features</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        state </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">qnn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        measured </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> measure_pauli_expectations</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">state</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> pauli_z_matrix</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> F</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">log_softmax</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">measured</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dim</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token operator" style="color:rgb(12, 150, 155)">-</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dataset">Dataset<a href="https://easonoob.github.io/blog/intro-to-qnn#dataset" class="hash-link" aria-label="Direct link to Dataset" title="Direct link to Dataset">​</a></h3>
<p>We will process the MNIST to include only first 5 digits and resize it to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">5 \times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">5</span></span></span></span>.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(17, 17, 17)">MNISTDigitsDataset</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">datasets</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">MNIST</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> root</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> train</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">None</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> target_transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">None</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> download</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">False</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token builtin" style="color:rgb(72, 118, 214)">super</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">root</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> train</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">train</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> target_transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">target_transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> download</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">download</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Filter indices for digits 0 to 3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        indices </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">i </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> i</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> label </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">enumerate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">targets</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> label </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">data </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">indices</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">targets </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">targets</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">indices</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">__getitem__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">with</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">no_grad</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Get the image and target label</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            img</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> target </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">int</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">targets</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">index</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Convert image to PIL for transformations</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            img </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> transforms</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">functional</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to_pil_image</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">img</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply transformations if any</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                img </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">img</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">target_transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                target </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">target_transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">target</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> img</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> target</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">__len__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">transform </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> transforms</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Compose</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    transforms</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Resize</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Resize the image to 5x5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    transforms</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">ToTensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">       </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Convert the image to a PyTorch tensor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Initialize the dataset</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">train_dataset </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> MNISTDigitsDataset</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">root</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">'./data'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> train</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> download</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">valid_dataset </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> MNISTDigitsDataset</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">root</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">'./data'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> train</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">False</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">transform</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> download</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Create the DataLoader</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">batch_size </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">train_dataloader </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> DataLoader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">train_dataset</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> batch_size</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">batch_size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> shuffle</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">valid_dataloader </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> DataLoader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">valid_dataset</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> batch_size</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">batch_size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> shuffle</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">False</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="training-loop">Training Loop<a href="https://easonoob.github.io/blog/intro-to-qnn#training-loop" class="hash-link" aria-label="Direct link to Training Loop" title="Direct link to Training Loop">​</a></h3>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">device </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'cuda'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cuda</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">is_available</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">else</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">'cpu'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">model </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> VQC</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">loss_fn </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">NLLLoss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">optimizer </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">optim</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Adam</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">parameters</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> lr</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token number" style="color:rgb(170, 9, 130)">0.01</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Training loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">num_epochs </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">train_losses </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">valid_losses </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">valid_accuracies </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> epoch </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">range</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">num_epochs</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> batch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">enumerate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">train_dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">zero_grad</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        outputs </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        loss </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">outputs</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">backward</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">step</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        train_losses</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">batch </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">%</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">50</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Epoch </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">epoch </span><span class="token string-interpolation interpolation operator" style="color:rgb(12, 150, 155)">+</span><span class="token string-interpolation interpolation"> </span><span class="token string-interpolation interpolation number" style="color:rgb(170, 9, 130)">1</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">/</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">num_epochs</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">, Iteration: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">batch</span><span class="token string-interpolation interpolation operator" style="color:rgb(12, 150, 155)">+</span><span class="token string-interpolation interpolation number" style="color:rgb(170, 9, 130)">1</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">, Loss: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">loss</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token string-interpolation interpolation">item</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> batch </span><span class="token operator" style="color:rgb(12, 150, 155)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">500</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token keyword" style="color:rgb(12, 150, 155)">break</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Stop early to speed up the training process</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Validation loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">eval</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">with</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">no_grad</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        total </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        correct </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> batch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">enumerate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">valid_dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            outputs </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">images</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            loss </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">outputs</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            valid_losses</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            _</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> predicted </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">max</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">outputs</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            total </span><span class="token operator" style="color:rgb(12, 150, 155)">+=</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            correct </span><span class="token operator" style="color:rgb(12, 150, 155)">+=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">predicted </span><span class="token operator" style="color:rgb(12, 150, 155)">==</span><span class="token plain"> labels</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">sum</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> batch </span><span class="token operator" style="color:rgb(12, 150, 155)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">100</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">                </span><span class="token keyword" style="color:rgb(12, 150, 155)">break</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Stop early to speed up the validation process</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        accuracy </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> correct </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> total</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        valid_accuracies</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">accuracy</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Validation accuracy: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">accuracy</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">, Loss: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">loss</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token string-interpolation interpolation">item</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">train</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And finally plot the result:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># plot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">plot</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">train_losses</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">'Training loss'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">plot</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">valid_losses</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> label</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">'Validation loss'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">xlabel</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'Iterations'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">ylabel</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'Loss'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">legend</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">title</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'Training and Validation Loss'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">plot</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">valid_accuracies</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">xlabel</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'Iterations'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">ylabel</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'Accuracy'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">title</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'Validation Accuracy'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Eason Xie</name>
            <uri>https://easonoob.github.io</uri>
        </author>
        <category label="intermediate" term="intermediate"/>
        <category label="quantum" term="quantum"/>
        <category label="qnn" term="qnn"/>
        <category label="pytorch" term="pytorch"/>
        <category label="tutorial" term="tutorial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Quantum Computing]]></title>
        <id>https://easonoob.github.io/blog/intro-to-quantum-computing</id>
        <link href="https://easonoob.github.io/blog/intro-to-quantum-computing"/>
        <updated>2024-01-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The basics of quantum computing and some hands-on trying.]]></summary>
        <content type="html"><![CDATA[<p>The basics of quantum computing and some hands-on trying.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2>
<ul>
<li>Basic Maths — matrix multiplications</li>
<li>Basic quantum mechanics concepts — Superposition, Wave-Particle Duality, the Uncertainty Principle, and Entanglement</li>
<li>Basic Python</li>
<li>Imagination power</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="quantum-mechanics">Quantum Mechanics<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#quantum-mechanics" class="hash-link" aria-label="Direct link to Quantum Mechanics" title="Direct link to Quantum Mechanics">​</a></h2>
<blockquote>
<p>“The mathematical framework of quantum theory has passed countless successful tests and is now universally accepted as a consistent and accurate description of all atomic phenomena.” ~ Erwin Schrödinger</p>
</blockquote>
<p>We will not be talking about the advanced maths or concepts of quantum mechanics in this blog post, such as the Uncertainty Principle or the Schrödinger Equation, but I'll assume you know the main principles of Quantum Mechanics, including Superposition, Wave-Particle Duality, the Uncertainty Principle, and Entanglement. The concept of qubits and quantum circuits gates will be explained below.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="qubits">Qubits<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#qubits" class="hash-link" aria-label="Direct link to Qubits" title="Direct link to Qubits">​</a></h3>
<p>In normal semiconductor computers, each "bit" can only represent two values: 0 and 1, which can be used in calculations as low and high voltage. However, in quantum computers, "qubits" (quantum bit) are used. Now instead of representing only 0 <strong>or</strong> 1, it can now represent 0 <strong>and</strong> 1 simultaneously. It carries a "state" <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ψ</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|\psi\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="mclose">⟩</span></span></span></span>, which is a vector defined as followed in a qubit:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ψ</mi><mo stretchy="false">⟩</mo><mo>=</mo><mi>α</mi><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>β</mi><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|\psi\rangle = \alpha |0\rangle + \beta |1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.0037em">α</span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.05278em">β</span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span></span>
<p>Where</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>α</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">∣</mi><mi>β</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">|\alpha|^2 + |\beta|^2 = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.0037em">α</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em"><span style="top:-3.113em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05278em">β</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em"><span style="top:-3.113em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">1</span></span></span></span></span>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal" style="margin-right:0.0037em">α</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em"></span><span class="mord mathnormal" style="margin-right:0.05278em">β</span></span></span></span> represents the <strong>probabilities</strong> or the qubit in the <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span> states respectively, and are <strong>complex numbers</strong>.</p>
<p>Now, if we have two qubits entangled, we can represent <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">2^2 = 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">4</span></span></span></span> states (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>00</mn><mo separator="true">,</mo><mn>01</mn><mo separator="true">,</mo><mn>10</mn><mo separator="true">,</mo><mn>11</mn></mrow><annotation encoding="application/x-tex">00, 01, 10, 11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em"></span><span class="mord">00</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord">01</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord">10</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord">11</span></span></span></span>), each associated with a probability.</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ψ</mi><mo stretchy="false">⟩</mo><mo>=</mo><msub><mi>c</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|\psi\rangle = c_1 |0\rangle + c_2 |1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span></span>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>ϕ</mi><mo stretchy="false">⟩</mo><mo>=</mo><msub><mi>c</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>+</mo><msub><mi>c</mi><mn>4</mn></msub><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|\phi\rangle = c_3 |0\rangle + c_4 |1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal">ϕ</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span></span>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>d</mi><mo stretchy="false">⟩</mo><mo>=</mo><msub><mi>c</mi><mn>1</mn></msub><msub><mi>c</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><mn>00</mn><mo stretchy="false">⟩</mo><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><msub><mi>c</mi><mn>4</mn></msub><mi mathvariant="normal">∣</mi><mn>01</mn><mo stretchy="false">⟩</mo><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><msub><mi>c</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><mn>10</mn><mo stretchy="false">⟩</mo><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><msub><mi>c</mi><mn>4</mn></msub><mi mathvariant="normal">∣</mi><mn>11</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|combined\rangle = c_1c_3 |00\rangle + c_1c_4 |01\rangle + c_2c_3 |10\rangle + c_2c_4 |11\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord mathnormal">co</span><span class="mord mathnormal">mbin</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣00</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣01</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣10</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord">∣11</span><span class="mclose">⟩</span></span></span></span></span>
<p>The power of quantum computing is you can represent <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> states if you have <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal">n</span></span></span></span> qubits, which is an exponential growth. For example, if you have 20 qubits, you can represent <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>20</mn></msup><mo>=</mo><mn>1048576</mn></mrow><annotation encoding="application/x-tex">2^{20} = 1048576</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">20</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">1048576</span></span></span></span> states, but in a classical computer, it is only 20! If you have 266 qubits, you can represent nearly <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>80</mn></msup></mrow><annotation encoding="application/x-tex">10^{80}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">80</span></span></span></span></span></span></span></span></span></span></span></span> states, which is about the number of atoms in the observable universe! Every single "operation" you perform on these qubits instantly affects its <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> states. Now we will talk about these "operations" — quantum circuit gates.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gates">Gates<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#gates" class="hash-link" aria-label="Direct link to Gates" title="Direct link to Gates">​</a></h3>
<p>To visualize a single qubit, you can use the Bloch Sphere:
<img decoding="async" loading="lazy" alt="Bloch Sphere" src="https://easonoob.github.io/assets/images/bloch_sphere-8d8a0b1da060cb4f94b98c2c30612f06.png" width="1512" height="1512" class="img_ev3q">
The z-axis means the probability in being measured in <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span>. X-axis and y-axis are also similar.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mo>+</mo><mo stretchy="false">⟩</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|+\rangle = \frac{1}{\sqrt{2}}(|0\rangle + |1\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord">+</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.2514em;vertical-align:-0.93em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em"><span style="top:-2.2028em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord">2</span></span></span><span style="top:-2.8672em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em"><span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩)</span></span></span></span></span><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mo>−</mo><mo stretchy="false">⟩</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>−</mo><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|-\rangle = \frac{1}{\sqrt{2}}(|0\rangle - |1\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord">−</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.2514em;vertical-align:-0.93em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em"><span style="top:-2.2028em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord">2</span></span></span><span style="top:-2.8672em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em"><span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩)</span></span></span></span></span><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mo>+</mo><mi>i</mi><mo stretchy="false">⟩</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>−</mo><mi>i</mi><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|+i\rangle = \frac{1}{\sqrt{2}}(|0\rangle - i|1\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.2514em;vertical-align:-0.93em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em"><span style="top:-2.2028em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord">2</span></span></span><span style="top:-2.8672em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em"><span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord">∣1</span><span class="mclose">⟩)</span></span></span></span></span><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mo>−</mo><mi>i</mi><mo stretchy="false">⟩</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>−</mo><mi>i</mi><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|-i\rangle = \frac{1}{\sqrt{2}}(|0\rangle - i|1\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.2514em;vertical-align:-0.93em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em"><span style="top:-2.2028em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord">2</span></span></span><span style="top:-2.8672em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em"><span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣0</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord">∣1</span><span class="mclose">⟩)</span></span></span></span></span></div></div>
<p>Quantum circuit gates can be visualized as rotating the state (the red arrow) in the bloch sphere. Here are some examples:</p>
<ol>
<li>
<p><strong>Pauli-X Gate (NOT Gate)</strong>:</p>
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span></span></span></span> radians (180 degrees) around the X-axis.</li>
<li>Effect: Transforms the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span> and vice versa. On the Bloch sphere, it flips the state from the north pole to the south pole and vice versa.</li>
</ul>
</li>
<li>
<p><strong>Pauli-Y Gate</strong>:</p>
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span></span></span></span> radians (180 degrees) around the Y-axis.</li>
<li>Effect: Applies a complex phase and swaps the states <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span>. For example, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> becomes <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">i|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span> becomes <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>i</mi><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">-i|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">−</span><span class="mord mathnormal">i</span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span>.</li>
</ul>
</li>
<li>
<p><strong>Pauli-Z Gate</strong>:</p>
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span></span></span></span> radians (180 degrees) around the Z-axis.</li>
<li>Effect: Leaves the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> unchanged and adds a phase of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span></span></span></span> (equivalent to a factor of -1) to the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span>.</li>
</ul>
</li>
<li>
<p><strong>Hadamard Gate (H Gate)</strong>:</p>
<ul>
<li>Rotation: This gate performs a more complex transformation, equivalent to rotating around the axis at 45 degrees from both X and Z axes, followed by a <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span></span></span></span> radian rotation around the Y-axis.</li>
<li>Effect: Creates superpositions from basis states, turning <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> into <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><msqrt><mn>2</mn></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\frac{|0\rangle + |1\rangle}{\sqrt{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.548em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.485em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣0</span><span class="mclose mtight">⟩</span><span class="mbin mtight">+</span><span class="mord mtight">∣1</span><span class="mclose mtight">⟩</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span> into <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo><mo>−</mo><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><msqrt><mn>2</mn></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\frac{|0\rangle - |1\rangle}{\sqrt{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.548em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.485em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣0</span><span class="mclose mtight">⟩</span><span class="mbin mtight">−</span><span class="mord mtight">∣1</span><span class="mclose mtight">⟩</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>.</li>
</ul>
</li>
<li>
<p><strong>S Gate (Phase Gate)</strong>:</p>
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>π</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{\pi}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> radians (90 degrees) around the Z-axis.</li>
<li>Effect: Leaves the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> unchanged and multiplies the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span> by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em"></span><span class="mord mathnormal">i</span></span></span></span>.</li>
</ul>
</li>
<li>
<p><strong>T Gate</strong>:</p>
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>π</mi><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{\pi}{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> radians (45 degrees) around the Z-axis.</li>
<li>Effect: Leaves the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>0</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|0\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣0</span><span class="mclose">⟩</span></span></span></span> unchanged and multiplies the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span> by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">e^{i\pi/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span></span></span></span>, which is a more subtle phase shift than the S gate.</li>
</ul>
</li>
</ol>
<p>And some parameterized gates:</p>
<ol start="7">
<li><strong>RX Gate</strong>:<!-- -->
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal" style="margin-right:0.02778em">θ</span></span></span></span> radians around the X-axis. It can be represented as a matrix multiplication between the unitary gate matrix and the quantum states, the gate matrix is:</li>
</ul>
</li>
</ol>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>i</mi><mi>sin</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>i</mi><mi>sin</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">R_x(\theta) = \begin{bmatrix}
\cos\left(\frac{\theta}{2}\right) &amp; -i\sin\left(\frac{\theta}{2}\right) \\
-i\sin\left(\frac{\theta}{2}\right) &amp; \cos\left(\frac{\theta}{2}\right)
\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.4802em;vertical-align:-0.9901em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4901em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.3699em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9901em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4901em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.3699em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9901em"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size3">]</span></span></span></span></span></span></span>
<ol start="8">
<li><strong>RY Gate</strong>:<!-- -->
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal" style="margin-right:0.02778em">θ</span></span></span></span> radians around the y-axis:</li>
</ul>
</li>
</ol>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>sin</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>sin</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>cos</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>θ</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">R_y(\theta) = \begin{bmatrix}
\cos\left(\frac{\theta}{2}\right) &amp; -\sin\left(\frac{\theta}{2}\right) \\
\sin\left(\frac{\theta}{2}\right) &amp; \cos\left(\frac{\theta}{2}\right)
\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.4802em;vertical-align:-0.9901em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4901em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.3699em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9901em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4901em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-2.3699em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9901em"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size3">]</span></span></span></span></span></span></span>
<ol start="8">
<li><strong>RZ Gate</strong>:<!-- -->
<ul>
<li>Rotation: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal" style="margin-right:0.02778em">θ</span></span></span></span> radians around the z-axis:</li>
</ul>
</li>
</ol>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>e</mi><mrow><mo>−</mo><mi>i</mi><mi>θ</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>e</mi><mrow><mi>i</mi><mi>θ</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">R_z(\theta) = \begin{bmatrix}
e^{-i\theta/2} &amp; 0 \\
0 &amp; e^{i\theta/2}
\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.496em;vertical-align:-0.998em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.498em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.362em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.998em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.498em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.362em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02778em">θ</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.998em"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size3">]</span></span></span></span></span></span></span>
<p>And much more.</p>
<div class="theme-admonition theme-admonition-danger admonition_xJq3 alert alert--danger"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>INFO</div><div class="admonitionContent_BuS1"><p>Every gate can be represented as an unitary gate matrix, e.g. the Hadamard Gate:</p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo>=</mo><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">H = \frac{1}{\sqrt{2}}\begin{bmatrix}
1 &amp; 1 \\
1 &amp; -1
\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em"></span><span class="mord mathnormal" style="margin-right:0.08125em">H</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em"><span style="top:-2.2028em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord">2</span></span></span><span style="top:-2.8672em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em"><span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size3">]</span></span></span></span></span></span></span></div></div>
<p>Also, there are double-qubits gate, for example the CNOT (Controlled-NOT) gate:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>N</mi><mi>O</mi><mi>T</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">CNOT = \begin{bmatrix}
1 &amp; 0 &amp; 0 &amp; 0 \\
0 &amp; 1 &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; 1 \\
0 &amp; 0 &amp; 1 &amp; 0
\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em"></span><span class="mord mathnormal" style="margin-right:0.13889em">CNOT</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em"><span style="top:-4.65em"><span class="pstrut" style="height:6.8em"></span><span style="width:0.667em;height:4.800em"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v1200 v1759 h84z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em"><span style="top:-4.81em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em"><span style="top:-4.81em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em"><span style="top:-4.81em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.21em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em"><span style="top:-4.81em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.21em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em"><span style="top:-4.65em"><span class="pstrut" style="height:6.8em"></span><span style="width:0.667em;height:4.800em"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="4.800em" viewBox="0 0 667 4800"><path d="M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v1200 v1759 h84z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em"><span></span></span></span></span></span></span></span></span></span></span></span>
<p>Controlled gates mean if the first qubit is <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>1</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|1\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣1</span><span class="mclose">⟩</span></span></span></span>, then the gate (NOT in this case) on second qubit will be performed. There are even triple-qubits gates, like the Toffoli gate (aka CCNOT), which has a <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>×</mo><msup><mn>2</mn><mi>n</mi></msup><mo>=</mo><mn>8</mn><mo>×</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">2^n \times 2^n = 8 \times 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6644em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6444em"></span><span class="mord">8</span></span></span></span> size gate matrix.</p>
<p>If you have a quantum states, say 10 qubits, and you want to apply a specific gate on a specific qubit, you can use the Kronecker product to construct a <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>×</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n \times 2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6644em"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> gate matrix and apply it to the quantum states, for example you want to apply the Hadamard gate on the 4th qubit:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>ψ</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">⟩</mo><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>ψ</mi><mi>t</mi></msub><mo stretchy="false">⟩</mo><mo>×</mo><mo stretchy="false">(</mo><mi>I</mi><mo>⊗</mo><mi>I</mi><mo>⊗</mo><mi>I</mi><mo>⊗</mo><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>⊗</mo><mi>I</mi><mo>⊗</mo><mi>I</mi><mo>⊗</mo><mi>I</mi><mo>⊗</mo><mi>I</mi><mo>⊗</mo><mi>I</mi><mo>⊗</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|\psi_{t+1}\rangle = |\psi_t\rangle \times (I \otimes I \otimes I \otimes \frac{1}{\sqrt{2}}\begin{bmatrix}1 &amp; 1 \\ 1 &amp; -1\end{bmatrix} \otimes I \otimes I \otimes I \otimes I \otimes I \otimes I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em"><span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em"><span style="top:-2.2028em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9072em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord">2</span></span></span><span style="top:-2.8672em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1328em"><span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span><span class="mclose">)</span></span></span></span></span>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em"></span><span class="mord mathnormal" style="margin-right:0.07847em">I</span></span></span></span> is the identity matrix, i.e. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}1 &amp; 0 \\ 0 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em"></span><span class="minner"><span class="mopen delimcenter" style="top:0em"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em"></span><span class="arraycolsep" style="width:0.5em"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em"><span style="top:-3.61em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.41em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em"><span class="delimsizing size3">]</span></span></span></span></span></span></p></div></div>
<p>These quantum gates are crucial in constructing quantum circuits for algorithms, where each type of gate contributes to manipulating the qubit's state in a controlled manner to achieve various computational goals.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="simulation-with-qiskit">Simulation with Qiskit<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#simulation-with-qiskit" class="hash-link" aria-label="Direct link to Simulation with Qiskit" title="Direct link to Simulation with Qiskit">​</a></h2>
<p>Qiskit is an open-source framework for quantum computing. It provides the tools for creating quantum circuits, simulating them, and running them on real quantum hardware through IBM's cloud services.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-your-environment">Setting Up Your Environment<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#setting-up-your-environment" class="hash-link" aria-label="Direct link to Setting Up Your Environment" title="Direct link to Setting Up Your Environment">​</a></h3>
<p>To start using Qiskit, make sure Python is installed on your machine, then install Qiskit and Qiskit Aer, which includes simulators that run on your local machine.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">pip install qiskit qiskit-aer pylatexenc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="single-qubit-operations">Single Qubit Operations<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#single-qubit-operations" class="hash-link" aria-label="Direct link to Single Qubit Operations" title="Direct link to Single Qubit Operations">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="building-the-circuit">Building the Circuit<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#building-the-circuit" class="hash-link" aria-label="Direct link to Building the Circuit" title="Direct link to Building the Circuit">​</a></h4>
<p>We'll begin with a basic single-qubit circuit to demonstrate sequential gate operations that include rotations and a phase shift.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> qiskit </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> QuantumCircuit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> transpile</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> qiskit_aer </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> Aer</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> qiskit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">visualization </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> plot_bloch_multivector</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Initialize a Quantum Circuit with 1 qubit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_single </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> QuantumCircuit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply rotation around the X-axis</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_single</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">rx</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">3.14159</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Pi/4 rotation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply rotation around the Y-axis</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_single</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">ry</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">3.14159</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Pi/2 rotation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a Z gate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_single</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">z</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Visualize the circuit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">"Single Qubit Circuit:"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">qc_single</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">draw</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">output</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">'mpl'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="calculating-the-expected-state-vector">Calculating the Expected State Vector<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#calculating-the-expected-state-vector" class="hash-link" aria-label="Direct link to Calculating the Expected State Vector" title="Direct link to Calculating the Expected State Vector">​</a></h4>
<p>The state vector undergoes a rotation by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">\pi/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span><span class="mord">/4</span></span></span></span> radians around the X-axis, followed by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\pi/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span><span class="mord">/2</span></span></span></span> around the Y-axis, and finally, a phase shift due to the Z gate.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="simulation-and-output">Simulation and Output<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#simulation-and-output" class="hash-link" aria-label="Direct link to Simulation and Output" title="Direct link to Simulation and Output">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Prepare the simulator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">simulator </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> Aer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">get_backend</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'statevector_simulator'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Transpile the circuit for the simulator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">transpiled_qc </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> transpile</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">qc_single</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> simulator</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Run the simulation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">job </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> simulator</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">transpiled_qc</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">result </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> job</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Get the final state vector</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">statevector </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">get_statevector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">statevector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Plot the state on the Bloch sphere</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plot_bloch_multivector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">statevector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multi-qubit-operations">Multi-Qubit Operations<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#multi-qubit-operations" class="hash-link" aria-label="Direct link to Multi-Qubit Operations" title="Direct link to Multi-Qubit Operations">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="building-the-circuit-1">Building the Circuit<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#building-the-circuit-1" class="hash-link" aria-label="Direct link to Building the Circuit" title="Direct link to Building the Circuit">​</a></h4>
<p>We will construct a five-qubit circuit with a combination of entanglement, rotations, and phase shifts to demonstrate the interplay of different quantum gates.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> qiskit </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> QuantumCircuit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> transpile</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> qiskit_aer </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> Aer</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> qiskit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">visualization </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> plot_bloch_multivector</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> math </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> pi</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Initialize a Quantum Circuit with 5 qubits</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> QuantumCircuit</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a Hadamard gate to qubit 0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">h</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a CNOT gate between qubit 0 and qubit 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cx</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a rotation around the X-axis by pi/2 on qubit 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">rx</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">pi </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a T gate to qubit 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">t</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a CNOT gate between qubit 1 and qubit 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cx</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a rotation around the Z-axis by pi/4 on qubit 3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">rz</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">pi </span><span class="token operator" style="color:rgb(12, 150, 155)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a Hadamard gate to qubit 4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">h</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a CNOT gate between qubit 4 and qubit 3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cx</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Apply a CNOT gate between qubit 1 and qubit 4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cx</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Visualize the Circuit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">"Five-Qubit Circuit:"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">draw</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">output</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">'mpl'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="calculating-the-expected-state-vector-1">Calculating the Expected State Vector<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#calculating-the-expected-state-vector-1" class="hash-link" aria-label="Direct link to Calculating the Expected State Vector" title="Direct link to Calculating the Expected State Vector">​</a></h4>
<p>Now let's calculate the expected state vector after applying the specified sequence of gates:</p>
<ol>
<li>
<p><strong>Initial State</strong>: All qubits start in the state <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">|00000\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣00000</span><span class="mclose">⟩</span></span></span></span>.</p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.08125em">H</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></strong>: Creates a superposition on qubit 0.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mn>10000</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{2}} (|00000\rangle + |10000\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣10000</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>CNOT</mtext><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{CNOT}(0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord text"><span class="mord">CNOT</span></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></strong>: Entangles qubits 0 and 1.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mn>11000</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{2}} (|00000\rangle + |11000\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣11000</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>RX</mtext><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mi>π</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{RX}(1, \pi/2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord text"><span class="mord">RX</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span><span class="mord">/2</span><span class="mclose">)</span></span></span></span></strong>: Applies a <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\pi/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span><span class="mord">/2</span></span></span></span> rotation on qubit 1, transforming its basis states.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><mi mathvariant="normal">∣</mi><mn>11000</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{2}} (|00000\rangle + i|11000\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord">∣11000</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.13889em">T</span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></strong>: Adds a phase of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">\pi/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span><span class="mord">/4</span></span></span></span> to the state of qubit 2.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11000</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{2}} (|00000\rangle + ie^{i\pi/4}|11000\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11000</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>CNOT</mtext><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{CNOT}(1, 2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord text"><span class="mord">CNOT</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></strong>: Conditionally flips qubit 2 based on qubit 1.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11100</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{2}} (|00000\rangle + ie^{i\pi/4}|11100\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11100</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>RZ</mtext><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{RZ}(3, \pi/4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord text"><span class="mord">RZ</span></span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span><span class="mord">/4</span><span class="mclose">)</span></span></span></span></strong>: Adds a phase of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">\pi/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">π</span><span class="mord">/4</span></span></span></span> to qubit 3.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mn>2</mn></msqrt></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11100</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{2}} (|00000\rangle + ie^{i\pi/4}|11100\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3831em;vertical-align:-0.538em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.551em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9128em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord mtight" style="padding-left:0.833em"><span class="mord mtight">2</span></span></span><span style="top:-2.8728em"><span class="pstrut" style="height:3em"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1272em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11100</span><span class="mclose">⟩)</span></span></span></span> (no change in basis states, just a phase on the amplitude if qubit 3 were in state |1|)</p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.08125em">H</span><span class="mopen">(</span><span class="mord">4</span><span class="mclose">)</span></span></span></span></strong>: Creates a superposition on qubit 4.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mn>00001</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11100</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11101</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{2} (|00000\rangle + |00001\rangle + ie^{i\pi/4}|11100\rangle + ie^{i\pi/4}|11101\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣00001</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11100</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11101</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>CNOT</mtext><mo stretchy="false">(</mo><mn>4</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{CNOT}(4, 3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord text"><span class="mord">CNOT</span></span><span class="mopen">(</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></strong>: Conditionally flips qubit 3 based on qubit 4.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mn>00001</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11110</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11111</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{2} (|00000\rangle + |00001\rangle + ie^{i\pi/4}|11110\rangle + ie^{i\pi/4}|11111\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣00001</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11110</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11111</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
<li>
<p><strong>After <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>CNOT</mtext><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{CNOT}(1, 4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord text"><span class="mord">CNOT</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span></strong>: Conditionally flips qubit 4 based on qubit 1.
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mn>00000</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi mathvariant="normal">∣</mi><mn>00001</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11010</mn><mo stretchy="false">⟩</mo><mo>+</mo><mi>i</mi><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mi mathvariant="normal">∣</mi><mn>11011</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{2} (|00000\rangle + |00001\rangle + ie^{i\pi/4}|11010\rangle + ie^{i\pi/4}|11011\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">∣00000</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord">∣00001</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11010</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em"></span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em">iπ</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span><span class="mord">∣11011</span><span class="mclose">⟩)</span></span></span></span></p>
</li>
</ol>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="simulation-and-output-1">Simulation and Output<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#simulation-and-output-1" class="hash-link" aria-label="Direct link to Simulation and Output" title="Direct link to Simulation and Output">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Prepare the simulator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">simulator </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> Aer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">get_backend</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">'statevector_simulator'</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Transpile the circuit for the simulator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">transpiled_qc </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> transpile</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">qc_multi</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> simulator</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Run the simulation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">job </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> simulator</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">transpiled_qc</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">result </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> job</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">result</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Get the final state vector</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">statevector </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">get_statevector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">statevector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Plot the state on the Bloch sphere</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plot_bloch_multivector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">statevector</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tasks-you-may-do">Tasks you may do<a href="https://easonoob.github.io/blog/intro-to-quantum-computing#tasks-you-may-do" class="hash-link" aria-label="Direct link to Tasks you may do" title="Direct link to Tasks you may do">​</a></h2>
<ol>
<li>Implement Shor's Algorithm for finding the prime factors of an integer.</li>
<li>Implement Grover's Algorithm for an unstructured search that finds with high probability the unique input to a black box function that produces a particular output value.</li>
</ol>]]></content>
        <author>
            <name>Eason Xie</name>
            <uri>https://easonoob.github.io</uri>
        </author>
        <category label="beginners" term="beginners"/>
        <category label="quantum" term="quantum"/>
        <category label="qiskit" term="qiskit"/>
        <category label="pytorch" term="pytorch"/>
        <category label="tutorial" term="tutorial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to PyTorch]]></title>
        <id>https://easonoob.github.io/blog/intro-to-pytorch</id>
        <link href="https://easonoob.github.io/blog/intro-to-pytorch"/>
        <updated>2023-12-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post will be about some basic introductions to PyTorch, including tensors, and how to train your own model in PyTorch.]]></summary>
        <content type="html"><![CDATA[<p>This blog post will be about some basic introductions to PyTorch, including tensors, and how to train your own model in PyTorch.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://easonoob.github.io/blog/intro-to-pytorch#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2>
<ul>
<li>Basic Maths</li>
<li>Basic Python</li>
<li>Common Sense</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="aims">Aims<a href="https://easonoob.github.io/blog/intro-to-pytorch#aims" class="hash-link" aria-label="Direct link to Aims" title="Direct link to Aims">​</a></h2>
<ol>
<li>Understand tensors</li>
<li>Understand the steps to build and train a model in PyTorch</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://easonoob.github.io/blog/intro-to-pytorch#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<blockquote>
<p>“Artificial Intelligence, deep learning, machine learning — whatever you're doing if you don't understand it — learn it. Because otherwise you're going to be a dinosaur within 3 years.” ~ Mark Cuban.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tensors">Tensors<a href="https://easonoob.github.io/blog/intro-to-pytorch#tensors" class="hash-link" aria-label="Direct link to Tensors" title="Direct link to Tensors">​</a></h2>
<p><a href="https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html" target="_blank" rel="noopener noreferrer">https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</a></p>
<p>Tensors are specialized arrays or matrices. It can have as many dimensions as you want. We use tensors to encode the data in the PyTorch, as well as the model parameters. Specifically, if you perform operations on a PyTorch tensor (e.g. addition, multiplication), your action will be saved into PyTorch’s built-in dynamic computation graph, which is necessary for model backpropagation in training.</p>
<p>Here’s an example of some tensors:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> torch</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Create a tensor from a list/array:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">data1 </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># 1D array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">data2 </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># 2D array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">tensor1 </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">data1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">tensor2 </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">data2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">tensor1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># torch.Size([6])</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">tensor2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># torch.Size([3, 2])</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Create a tensor filled with zeros or ones:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">zeros_tensor </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">zeros</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># A 6D tensor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">ones_tensor </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">ones</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Create a random tensor from a specified shape:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">random_tensor1 </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">randn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">10</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">20</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># A 10 by 20 tensor with normal distribution</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">random_tensor1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># torch.Size([10, 20])</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">random_tensor1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token number" style="color:rgb(170, 9, 130)">10</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># You can use python array index slicing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">random_tensor2 </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">randint</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">100</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">10</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># 5 by 10 tensor with integer values ranging from 0 to 100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">random_tensor2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token number" style="color:rgb(170, 9, 130)">10</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Attributes of a tensor:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">tensor1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">tensor1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">dtype</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># data type, e.g. float32, int64, float64, Bfloat16</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">tensor1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># device the tensor is stored on, e.g. cpu, cuda</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="training-a-simple-model-in-pytorch">Training a Simple Model in PyTorch<a href="https://easonoob.github.io/blog/intro-to-pytorch#training-a-simple-model-in-pytorch" class="hash-link" aria-label="Direct link to Training a Simple Model in PyTorch" title="Direct link to Training a Simple Model in PyTorch">​</a></h2>
<p>The steps of training a model in PyTorch includes:</p>
<ol>
<li>Find a dataset that suits your problem, download it, and create a dataloader.</li>
<li>Define your model, you can create your own model module using <code>nn.Module</code>.</li>
<li>Define your loss function (from <code>torch.nn</code>), optimizers (from <code>torch.optim</code>), etc.</li>
<li>Define your training loop, it can be a function that does a single step and write a loop, or just simply a training loop.</li>
<li>Start training!</li>
</ol>
<p>For this example, we are going to use the MNIST dataset, which is built-in in PyTorch, making it very easy to download and use.</p>
<p>First import the necessary libraries:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> torch</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> torch </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> nn</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">utils</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> DataLoader</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> torchvision </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> datasets</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">from</span><span class="token plain"> torchvision</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">transforms </span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> ToTensor</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="finding-and-defining-your-dataset">Finding and defining your dataset<a href="https://easonoob.github.io/blog/intro-to-pytorch#finding-and-defining-your-dataset" class="hash-link" aria-label="Direct link to Finding and defining your dataset" title="Direct link to Finding and defining your dataset">​</a></h3>
<p>PyTorch offers domain-specific libraries such as TorchText, TorchVision, and TorchAudio, all of which include datasets. For this tutorial, we will be using a TorchVision dataset.</p>
<p>The <code>torchvision.datasets</code> module contains <code>Dataset</code> objects for many real-world vision data like CIFAR, COCO. In this tutorial, we use the FashionMNIST dataset. Every TorchVision <code>Dataset</code> includes two arguments: <code>transform</code> and <code>target_transform</code> to modify the samples and labels respectively.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Download training data from the MNIST dataset.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">training_data </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> datasets</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">FashionMNIST</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    root</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">"data"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    train</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    download</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">ToTensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Convert to PyTorch tensor.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Download test data from the MNIST dataset.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">test_data </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> datasets</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">FashionMNIST</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    root</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token string" style="color:rgb(72, 118, 214)">"data"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    train</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">False</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    download</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token boolean" style="color:rgb(188, 84, 84)">True</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    transform</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">ToTensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We pass the <code>Dataset</code> as an argument to <code>DataLoader</code>. This wraps an iterable over our dataset, and supports automatic batching, sampling, shuffling and multiprocess data loading. Here we define a batch size of 64, i.e. each element in the dataloader iterable will return a batch of 64 features and labels.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">batch_size </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Create data loaders.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">train_dataloader </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> DataLoader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">training_data</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> batch_size</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">batch_size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">test_dataloader </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> DataLoader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">test_data</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> batch_size</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">batch_size</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> test_dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Shape of X [N, C, H, W]: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">X</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token string-interpolation interpolation">shape</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># N, C, H, W stands for Batch Size, Channel Size, Height, and Width</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Shape of y: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">y</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token string-interpolation interpolation">shape</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)"> </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">y</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token string-interpolation interpolation">dtype</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">break</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-the-model">Create the model<a href="https://easonoob.github.io/blog/intro-to-pytorch#create-the-model" class="hash-link" aria-label="Direct link to Create the model" title="Direct link to Create the model">​</a></h3>
<p>To define a neural network in PyTorch, we create a class that inherits from nn.Module. We define the layers of the network in the <code>__init__</code> function and specify how data will pass through the network in the forward function. To accelerate operations in the neural network, we move it to the GPU (<code>cuda</code>) or MPS if available.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Get cpu, gpu (cuda) device for training.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">device </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token string" style="color:rgb(72, 118, 214)">"cuda"</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">cuda</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">is_available</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">else</span><span class="token plain"> </span><span class="token string" style="color:rgb(72, 118, 214)">"cpu"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Using </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">device</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)"> device"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Define model</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(17, 17, 17)">NeuralNetwork</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Module</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token builtin" style="color:rgb(72, 118, 214)">super</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">__init__</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">flatten </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Flatten</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Flattens to (Batch Size, Channel Size * Height * Width), from a 4D tensor to a 2D tensor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">linear_relu_stack </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Sequential</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Linear</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">28</span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token number" style="color:rgb(170, 9, 130)">28</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">512</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Fully-connected hidden layer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">ReLU</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Activation Function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Linear</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">512</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">512</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">ReLU</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Linear</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">512</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">10</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># When `linear_relu_stack` is called, it will run all the modules inside in order.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">forward</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        x </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">flatten</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># flatten to 2D, same as x.view(x.size(0), -1)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        logits </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">linear_relu_stack</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># the nn.Sequential instance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">return</span><span class="token plain"> logits</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Create an instance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">model </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> NeuralNetwork</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><a href="https://pytorch.org/tutorials/beginner/basics/buildmodel_tutorial.html" target="_blank" rel="noopener noreferrer">Learn More About Building Neural Networks in PyTorch Here</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="define-the-loss-function-and-the-optimizer">Define the Loss Function and the Optimizer<a href="https://easonoob.github.io/blog/intro-to-pytorch#define-the-loss-function-and-the-optimizer" class="hash-link" aria-label="Direct link to Define the Loss Function and the Optimizer" title="Direct link to Define the Loss Function and the Optimizer">​</a></h3>
<p>We are using the Cross Entropy Loss loss function and the Stochastic Gradient Descent (SGD) optimizer for training this model.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">loss_fn </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">CrossEntropyLoss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">optimizer </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">optim</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">SGD</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">parameters</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> lr</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token number" style="color:rgb(170, 9, 130)">1e-3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="define-the-training-loop">Define the training loop<a href="https://easonoob.github.io/blog/intro-to-pytorch#define-the-training-loop" class="hash-link" aria-label="Direct link to Define the training loop" title="Direct link to Define the training loop">​</a></h3>
<p>First we define the function to train a single step:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">train</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    size </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">dataset</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">train</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> batch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">enumerate</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Move tensors to cuda if available</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Compute prediction error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        pred </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Forward pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        loss </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">pred</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Compute loss</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Backpropagation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">backward</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Compute gradients</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">step</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Update parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">zero_grad</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Zero the gradients</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">if</span><span class="token plain"> batch </span><span class="token operator" style="color:rgb(12, 150, 155)">%</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">100</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">==</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> current </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">batch </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"loss: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">loss</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token string-interpolation interpolation format-spec">&gt;7f</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">  [</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">current</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token string-interpolation interpolation format-spec">&gt;5d</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">/</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">size</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token string-interpolation interpolation format-spec">&gt;5d</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">]"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Then a function to evaluate (or validate). The goal of this is to check the model’s performance against the test dataset to ensure it is learning, and monitor if it is overfitting.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(153, 76, 195);font-style:italic">test</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    size </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">dataset</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    num_batches </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">len</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">eval</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    test_loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> correct </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">with</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">no_grad</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">to</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">device</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            pred </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">X</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            test_loss </span><span class="token operator" style="color:rgb(12, 150, 155)">+=</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">pred</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">            correct </span><span class="token operator" style="color:rgb(12, 150, 155)">+=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">pred</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">argmax</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(12, 150, 155)">==</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">type</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">float</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token builtin" style="color:rgb(72, 118, 214)">sum</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    test_loss </span><span class="token operator" style="color:rgb(12, 150, 155)">/=</span><span class="token plain"> num_batches</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    correct </span><span class="token operator" style="color:rgb(12, 150, 155)">/=</span><span class="token plain"> size</span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Test Error: \n Accuracy: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation interpolation number" style="color:rgb(170, 9, 130)">100</span><span class="token string-interpolation interpolation operator" style="color:rgb(12, 150, 155)">*</span><span class="token string-interpolation interpolation">correct</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token string-interpolation interpolation format-spec">&gt;0.1f</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">%, Avg loss: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">test_loss</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token string-interpolation interpolation format-spec">&gt;8f</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)"> \n"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The training process is conducted over several iterations (epochs) that go over the entire training dataset. During each epoch, the model learns parameters to make better predictions. We print the model’s accuracy and loss at each epoch; we’d like to see the accuracy increase and the loss decrease with every epoch.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">epochs </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> t </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">range</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">epochs</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Epoch </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">t</span><span class="token string-interpolation interpolation operator" style="color:rgb(12, 150, 155)">+</span><span class="token string-interpolation interpolation number" style="color:rgb(170, 9, 130)">1</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">\n-------------------------------"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    train</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">train_dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    test</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">test_dataloader</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> loss_fn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string" style="color:rgb(72, 118, 214)">"Done!"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><a href="https://pytorch.org/tutorials/beginner/basics/optimization_tutorial.html" target="_blank" rel="noopener noreferrer">Read More About Model Training Here</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tasks">Tasks<a href="https://easonoob.github.io/blog/intro-to-pytorch#tasks" class="hash-link" aria-label="Direct link to Tasks" title="Direct link to Tasks">​</a></h2>
<ol>
<li>Plot some graphs to show the training loss, validation loss, and validation accuracy over step.</li>
<li>Experiment with different learning rate, batch size, and model architecture, how does it affect the results?</li>
</ol>]]></content>
        <author>
            <name>Eason Xie</name>
            <uri>https://easonoob.github.io</uri>
        </author>
        <category label="beginners" term="beginners"/>
        <category label="nn" term="nn"/>
        <category label="pytorch" term="pytorch"/>
        <category label="tutorial" term="tutorial"/>
        <category label="tired" term="tired"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Most Basics of Neural Networks]]></title>
        <id>https://easonoob.github.io/blog/basic-of-nn</id>
        <link href="https://easonoob.github.io/blog/basic-of-nn"/>
        <updated>2023-11-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post will be about the most basics of neural networks, for absolute beginners.]]></summary>
        <content type="html"><![CDATA[<p>This blog post will be about the most basics of neural networks, for absolute beginners.</p>
<p>You've heard about things like ChatGPT, LlaMa, Midjourney, Dall-E, and Stable Diffusion. But have you ever wondered how exactly does they work? In this blog series, I will explain the neural network, from the absolute basics to advanced, from simple fully-connected networks to Transformers, Quantum Neural Networks, and Graph Neural Networks. If you encountered any questions, feel free to ask by directly through my email or by Discord!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://easonoob.github.io/blog/basic-of-nn#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2>
<ul>
<li>Basic Maths</li>
<li>Basic Python</li>
<li>Common Sense</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="aims">Aims<a href="https://easonoob.github.io/blog/basic-of-nn#aims" class="hash-link" aria-label="Direct link to Aims" title="Direct link to Aims">​</a></h2>
<ol>
<li>Understand the neurons and neural networks</li>
<li>Understand the use of neural networks</li>
<li>Understand forward pass, loss function, backward pass, and weight update</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="https://easonoob.github.io/blog/basic-of-nn#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2>
<blockquote>
<p>“I think the brain is essentially a computer and consciousness is like a computer program. It will cease to run when the computer is turned off. Theoretically, it could be re-created on a neural network, but that would be very difficult, as it would require all one's memories.” ~ Stephen Hawking</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="important-concepts">Important Concepts<a href="https://easonoob.github.io/blog/basic-of-nn#important-concepts" class="hash-link" aria-label="Direct link to Important Concepts" title="Direct link to Important Concepts">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="neurons-and-neural-networks">Neurons and Neural Networks<a href="https://easonoob.github.io/blog/basic-of-nn#neurons-and-neural-networks" class="hash-link" aria-label="Direct link to Neurons and Neural Networks" title="Direct link to Neurons and Neural Networks">​</a></h3>
<p>Imagine you are making a system to predict property prices. How would you implement such a system? Maybe it will take the different factors of a property (e.g. size, height, view, surrounding environment, etc.) to calculate the price and outputs it. But how can you calculate the price based on these inputs (factors)?</p>
<p>Let’s simplify the problem and assume there is only one factor: the size (area) of the property. Let’s plot a graph with the area on the x-axis, price on the y-axis:</p>
<p><img decoding="async" loading="lazy" alt="Graph 1" src="https://easonoob.github.io/assets/images/graph-1-1460aae2846d19334a39e42e1e3b7bca.png" width="581" height="304" class="img_ev3q"></p>
<p>Then we can draw a straight fit line on the graph to relate all the data points:</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Note that the fit line may not pass through all/any data points!</p></div></div>
<p><img decoding="async" loading="lazy" alt="Graph 2" src="https://easonoob.github.io/assets/images/graph-2-cbe9bfa9bb617ee523e2abf278fbcc35.png" width="597" height="316" class="img_ev3q"></p>
<p>How can you represent the fit line in maths? We can use a simple linear function:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f(x) = wx + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.10764em">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em"></span><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal">b</span></span></span></span></span>
<p>Where w is the <strong>weight</strong> (the steepness of the linear), b is the <strong>bias</strong> (the y-intercept, or height of the line). In fact, we can represent any straight line on a two-dimensional Cartesian coordinate space and any linear functions with one variable with this function. In the neural network, this function is the simplest form of a <strong>neuron</strong>. But what is a neuron? This is an anatomy of a human neuron cell:</p>
<p><img decoding="async" loading="lazy" alt="Neuron Anatomy" src="https://easonoob.github.io/assets/images/neuron-anatomy-14b23326d95951a88c8f05128bff5571.png" width="578" height="266" class="img_ev3q"></p>
<p>The dendrites receive the signals, the cell processes the signals, and the axon terminals send the signals to other neuron cells. By connecting 86 billion of these cells, it forms your brain. We can simulate a neuron in maths with the following function:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>4</mn></msub><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><msub><mi>w</mi><mn>4</mn></msub><msub><mi>x</mi><mn>4</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f(x_1, x_2, x_3, x_4, \ldots) = w_1 x_1 + w_2 x_2 + w_3 x_3 + w_4 x_4 + \cdots + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.10764em">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em"></span><span class="minner">…</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.6944em"></span><span class="mord mathnormal">b</span></span></span></span></span>
<p>The multiple weights represent the “importance” of each of the different input x. The b is still the bias. Here’s another diagram to understand the neuron:</p>
<p><img decoding="async" loading="lazy" alt="Diagram 1" src="https://easonoob.github.io/assets/images/diagram-1-1e2d707b70162d061d8acb26ce256fba.png" width="542" height="283" class="img_ev3q"></p>
<p>So, for example, the multiple x can be the different factors of the property, and the weights are parameters that you can tune, representing the importance of that factor contributing to the final price. Wait, what is the f(x) in the above diagram? It is an Activation Function. Its purpose is to introduce non-linearity into the neural network as combining linear functions can only result in a linear function:</p>
<p>Let <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">f(x) = w_1 x + b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.10764em">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">g(x) = w_2 x + b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span>, then <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x) = g(f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span>:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">h(x) = g(f(x)) = w_2 (w_1 x + b_1) + b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span></span>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">h(x) = w_2 w_1 x + w_2 b_1 + b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span></span>
<p>Let <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a = w_2 w_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">c = w_2 b_1 + b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span>, then:</p>
<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">h(x) = ax + c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em"></span></span><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal">c</span></span></span></span></span>
<p>Which is a straight line on the graph. But by adding activation functions in between, e.g. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)=g(a(f(x)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mord mathnormal" style="margin-right:0.03588em">g</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)))</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em"></span><span class="mord mathnormal">a</span></span></span></span> is the activation function, we can create a non-linear (broadly speaking not a straight line on the graph) function or network. Some common activation functions include ReLU, Sigmoid, Tanh, LeakyReLU, GELU, and Softmax. The details of the activation function will be talked about in later blog posts.</p>
<p>By combining and connecting multiple neurons in an orderly manner, you get a neural network. Below is a diagram of a neural network which you’ve probably seen before:</p>
<p><img decoding="async" loading="lazy" alt="Diagram 2" src="https://easonoob.github.io/assets/images/diagram-2-d789ccd4c35414f710540b4b8fe34684.png" width="650" height="366" class="img_ev3q"></p>
<p>Each circle (node) in the neural network represents a neuron. Each neuron in the input layer processes a single number and each neuron in the output layer outputs a single number. Neural networks are <strong>universal function approximators</strong>.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Note that while the neurons in the hidden layer may seem to have multiple outputs, the outputs are the same.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="training-of-neural-networks">Training of neural networks<a href="https://easonoob.github.io/blog/basic-of-nn#training-of-neural-networks" class="hash-link" aria-label="Direct link to Training of neural networks" title="Direct link to Training of neural networks">​</a></h3>
<p>However, how can you calculate the weights and biases given x and y? Below are the processes of training a neural network to find the optimal weights and biases:</p>
<ol>
<li><strong>Initialize the weights and biases</strong> using random numbers with normal or uniform distribution.</li>
<li><strong>Forward pass:</strong> Run the model with the input x, and get the model output y.</li>
<li><strong>Compute loss:</strong> Compare the model-output y with the real targeted y and calculate the difference using a loss function.</li>
<li><strong>Backpropagation/backward pass:</strong> Calculate the gradients of each parameter (weight or bias) using gradient descent with partial derivative. Which means how the output of the model changes with that parameter changing.</li>
<li><strong>Update parameters:</strong> Update the parameters using optimizers based on the gradients calculated and the given learning rate hyperparameter (usually between 1e-2 to 1e-6).</li>
<li><strong>Repeat Step 2 to 5</strong> with different x and y until the loss is good enough.</li>
</ol>
<p><img decoding="async" loading="lazy" alt="Diagram 3" src="https://easonoob.github.io/assets/images/diagram-3-dc8f33cae83dcaa7d25a2fb98c8c96b3.png" width="975" height="573" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="code-implementations">Code Implementations<a href="https://easonoob.github.io/blog/basic-of-nn#code-implementations" class="hash-link" aria-label="Direct link to Code Implementations" title="Direct link to Code Implementations">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="a-simple-neural-network-with-pytorch">A simple neural network with PyTorch<a href="https://easonoob.github.io/blog/basic-of-nn#a-simple-neural-network-with-pytorch" class="hash-link" aria-label="Direct link to A simple neural network with PyTorch" title="Direct link to A simple neural network with PyTorch">​</a></h3>
<p>Let’s consider a simple formula: y=3x+1. Given an array of x and array of the corresponding y, find 3 and 1 (the weight and the bias). Run the following codes in Google Colab for simplicity.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> torch </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># main library</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">nn </span><span class="token keyword" style="color:rgb(12, 150, 155)">as</span><span class="token plain"> nn </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># neural network modules and functions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">optim </span><span class="token keyword" style="color:rgb(12, 150, 155)">as</span><span class="token plain"> optim </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># optimizers for neural networks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">import</span><span class="token plain"> matplotlib</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">pyplot </span><span class="token keyword" style="color:rgb(12, 150, 155)">as</span><span class="token plain"> plt </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># plotting for analysing the loss</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">manual_seed</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">69</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># define a manual seed so the results are reproducible</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Define the data x and y:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">x </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">2</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">5</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">6</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">7</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">8</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">9</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">10</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">float32</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">y </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">3</span><span class="token operator" style="color:rgb(12, 150, 155)">*</span><span class="token plain">x </span><span class="token operator" style="color:rgb(12, 150, 155)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tolist</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tolist</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Define the model, loss function, and optimizer:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">model </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">Linear</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">1</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># a single neuron</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">criterion </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> nn</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">MSELoss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Mean squared error (MSE) loss function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">optimizer </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> optim</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">SGD</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">parameters</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> lr</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token number" style="color:rgb(170, 9, 130)">1e-4</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Stochastic Gradient Descent (SGD) optimizer</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Training Loop:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">epochs </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">losses </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> i </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">range</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">epochs</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> iter_x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> iter_y </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(72, 118, 214)">zip</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        iter_x </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> iter_x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">unsqueeze</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># add another dimension at the end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        iter_y </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> iter_y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">unsqueeze</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token number" style="color:rgb(170, 9, 130)">0</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># same</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">zero_grad</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># zero the gradients</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        output </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">iter_x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Forward pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        loss </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> criterion</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">output</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> iter_y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Compute Loss</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">backward</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Backward pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        optimizer</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">step</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Update parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">f"Epoch: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">i</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">/</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">epochs</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">, Loss: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">{</span><span class="token string-interpolation interpolation">loss</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token string-interpolation interpolation">item</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(153, 76, 195)">}</span><span class="token string-interpolation string" style="color:rgb(72, 118, 214)">"</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">        losses</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">loss</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">item</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Final loss: 0.0001777520083123818
Plot the loss graph:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">plot</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">losses</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">plt</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Plot the loss graph</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Loss Graph:</p>
<p><img decoding="async" loading="lazy" alt="Loss Graph" src="https://easonoob.github.io/assets/images/result-a37d05cf6a4d0ad7048d9b3b0c348395.png" width="549" height="411" class="img_ev3q"></p>
<p>Test the model:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#403f53;--prism-background-color:#FBFBFB"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#403f53;background-color:#FBFBFB"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#403f53"><span class="token keyword" style="color:rgb(12, 150, 155)">for</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> param </span><span class="token keyword" style="color:rgb(12, 150, 155)">in</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">named_parameters</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token punctuation" style="color:rgb(153, 76, 195)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">    </span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">name</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> param</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Inspect the weight and bias</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">n </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(170, 9, 130)">100</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># input x</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">x </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">tensor</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token punctuation" style="color:rgb(153, 76, 195)">[</span><span class="token plain">n</span><span class="token punctuation" style="color:rgb(153, 76, 195)">]</span><span class="token punctuation" style="color:rgb(153, 76, 195)">,</span><span class="token plain"> dtype</span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain">torch</span><span class="token punctuation" style="color:rgb(153, 76, 195)">.</span><span class="token plain">float32</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># convert to tensor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain">y </span><span class="token operator" style="color:rgb(12, 150, 155)">=</span><span class="token plain"> model</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">x</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(152, 159, 177);font-style:italic"># Forward pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#403f53"><span class="token plain"></span><span class="token keyword" style="color:rgb(12, 150, 155)">print</span><span class="token punctuation" style="color:rgb(153, 76, 195)">(</span><span class="token plain">y</span><span class="token punctuation" style="color:rgb(153, 76, 195)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="follow-up-tasks">Follow-up Tasks<a href="https://easonoob.github.io/blog/basic-of-nn#follow-up-tasks" class="hash-link" aria-label="Direct link to Follow-up Tasks" title="Direct link to Follow-up Tasks">​</a></h3>
<ol>
<li>Experiment with different learning rates and epochs and see how it affects the training result.</li>
<li>Enlarge the dataset (lengthen the x tensor), does it improve the model?</li>
<li>Experiment with a more complex function than y=3x+1 such as y=x^2. Does it work? If it doesn’t work, how can you solve this issue?</li>
<li>How can you make the training faster without changing the hardware, data and the model?</li>
</ol>
<p>Feel free to send me an email for your solutions to the above problems!</p>]]></content>
        <author>
            <name>Eason Xie</name>
            <uri>https://easonoob.github.io</uri>
        </author>
        <category label="beginners" term="beginners"/>
        <category label="nn" term="nn"/>
        <category label="tutorial" term="tutorial"/>
        <category label="tired" term="tired"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Website Launch!]]></title>
        <id>https://easonoob.github.io/blog/website-launch</id>
        <link href="https://easonoob.github.io/blog/website-launch"/>
        <updated>2023-10-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Website Launch]]></summary>
        <content type="html"><![CDATA[<p><img decoding="async" loading="lazy" alt="Website Launch" src="https://easonoob.github.io/assets/images/website-launch-060db6baab41c286ec9381513050efa8.jpg" width="1024" height="768" class="img_ev3q"></p>
<p>The website is launched today at 00:00 UTC+0!</p>]]></content>
        <author>
            <name>Eason Xie</name>
            <uri>https://easonoob.github.io</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="tired" term="tired"/>
    </entry>
</feed>